<div class="modal @modalClass" tabindex="-1" role="dialog" style="display:@modalDisplay">
    <div class="modal-dialog modal-dialog-scrollable @(ModalSize)" role="document">
        <div class="modal-content">
            @if (Title)
            {
                <div class="modal-header">

                    <h5 class="modal-title">@TitleText</h5>

                    <button type="button" @onclick="Close" class="btn-close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true"></span>
                    </button>

                </div>
            }
            <div class="modal-body">
                @Body
            </div>
            <div class="modal-footer">
                @Footer

            </div>
        </div>
    </div>
</div>


@if (showBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}


@code {
    [Parameter]
    public string? TitleText { get; set; }

    [Parameter]
    public RenderFragment? Body { get; set; }

    [Parameter]
    public RenderFragment? Footer { get; set; }

    [Parameter]
    public string ModalSize { get; set; } = "modal-md";

    [Parameter]
    public bool Title { get; set; } = false;

    [Parameter]
    public EventCallback CloseFunc { get; set; }

    // public Guid Guid = Guid.NewGuid();
    private string modalDisplay = "none;";
    private string modalClass = "";
    private bool showBackdrop = false;


    public void Open()
    {
        modalDisplay = "block;";
        modalClass = "modal-blur fade show border-0 d-flex justify-content-center align-items-center";
        showBackdrop = true;
        StateHasChanged();
    }

    public void Close()
    {
        CloseFunc.InvokeAsync();
        modalDisplay = "none";
        modalClass = "";
        showBackdrop = false;
        StateHasChanged();
    }
}